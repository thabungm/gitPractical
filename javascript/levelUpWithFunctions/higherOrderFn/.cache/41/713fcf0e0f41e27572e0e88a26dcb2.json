{"id":"js/index.js","dependencies":[{"name":"C:\\Users\\thabu\\code\\gitPractical\\javascript\\levelUpWithFunctions\\higherOrderFn\\.babelrc","includedInParent":true,"mtime":1660906266803},{"name":"C:\\Users\\thabu\\code\\gitPractical\\javascript\\levelUpWithFunctions\\higherOrderFn\\package.json","includedInParent":true,"mtime":1661303848560},{"name":"./cart.json","loc":{"line":1,"column":17,"index":17},"parent":"C:\\Users\\thabu\\code\\gitPractical\\javascript\\levelUpWithFunctions\\higherOrderFn\\src\\js\\index.js","resolved":"C:\\Users\\thabu\\code\\gitPractical\\javascript\\levelUpWithFunctions\\higherOrderFn\\src\\js\\cart.json"},{"name":"./view","loc":{"line":2,"column":41,"index":74},"parent":"C:\\Users\\thabu\\code\\gitPractical\\javascript\\levelUpWithFunctions\\higherOrderFn\\src\\js\\index.js","resolved":"C:\\Users\\thabu\\code\\gitPractical\\javascript\\levelUpWithFunctions\\higherOrderFn\\src\\js\\view.js"}],"generated":{"js":"\"use strict\";\n\nvar _cart = _interopRequireDefault(require(\"./cart.json\"));\n\nvar _view = require(\"./view\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// our objective is to run $ conversion\n(0, _view.renderRows)(_cart.default);\n(0, _view.renderTotals)(_cart.default);\n/* // item-rows\r\nimport cart from './cart.json';\r\nimport row, { calculateTotal } from './Row';\r\n\r\nconst result = cart.map((item) => {\r\n  return row(item.product, item.quantity, item.cost);\r\n});\r\n// console.log(result.join(''));\r\ndocument.querySelector('.item-rows').innerHTML = result.join('');\r\ncalculateTotal();\r\n */"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":0},"source":"js/index.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"js/index.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"js/index.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"js/index.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":4},"source":"js/index.js","original":{"line":4,"column":0},"name":"renderRows"},{"generated":{"line":10,"column":20},"source":"js/index.js","original":{"line":4,"column":0}},{"generated":{"line":10,"column":22},"source":"js/index.js","original":{"line":4,"column":11},"name":"cart"},{"generated":{"line":10,"column":35},"source":"js/index.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"js/index.js","original":{"line":5,"column":0}},{"generated":{"line":11,"column":4},"source":"js/index.js","original":{"line":5,"column":0},"name":"renderTotals"},{"generated":{"line":11,"column":22},"source":"js/index.js","original":{"line":5,"column":0}},{"generated":{"line":11,"column":24},"source":"js/index.js","original":{"line":5,"column":13},"name":"cart"},{"generated":{"line":11,"column":37},"source":"js/index.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"js/index.js","original":{"line":7,"column":0}},{"generated":{"line":13,"column":0},"source":"js/index.js","original":{"line":8,"column":0}},{"generated":{"line":14,"column":0},"source":"js/index.js","original":{"line":9,"column":0}},{"generated":{"line":15,"column":0},"source":"js/index.js","original":{"line":10,"column":0}},{"generated":{"line":16,"column":0},"source":"js/index.js","original":{"line":11,"column":0}},{"generated":{"line":17,"column":0},"source":"js/index.js","original":{"line":12,"column":0}},{"generated":{"line":18,"column":0},"source":"js/index.js","original":{"line":13,"column":0}},{"generated":{"line":19,"column":0},"source":"js/index.js","original":{"line":14,"column":0}},{"generated":{"line":20,"column":0},"source":"js/index.js","original":{"line":15,"column":0}},{"generated":{"line":21,"column":0},"source":"js/index.js","original":{"line":16,"column":0}},{"generated":{"line":22,"column":0},"source":"js/index.js","original":{"line":17,"column":0}}],"sources":{"js/index.js":"import cart from './cart.json';\r\nimport { renderRows, renderTotals } from './view';\r\n// our objective is to run $ conversion\r\nrenderRows(cart);\r\nrenderTotals(cart);\r\n\r\n/* // item-rows\r\nimport cart from './cart.json';\r\nimport row, { calculateTotal } from './Row';\r\n\r\nconst result = cart.map((item) => {\r\n  return row(item.product, item.quantity, item.cost);\r\n});\r\n// console.log(result.join(''));\r\ndocument.querySelector('.item-rows').innerHTML = result.join('');\r\ncalculateTotal();\r\n */\r\n"},"lineCount":null}},"error":null,"hash":"918978a7c0f9f183010833293a32bd64","cacheData":{"env":{}}}